<template>
  <view class="wrap">
    <!-- 顶部统计信息 -->
    <view class="topinfo" id="topInfo">
      <!-- <view class="calender">
        <text>{{ calenderArr[0] }}年</text>
        <picker mode="date" value="{{date}}" fields="month" start="2018-01-01" end="2020-01-01" @change="bindDateChange">
          <view class="picker">
            <text class="bold">{{ calenderArr[1] }}</text>
            <view class="iconfont icon-pulldown"></view>
          </view>
        </picker>
      </view> -->
      <view class="income">
        <text>基金</text>
        <text class="bold">{{ moneyStat.fund }}</text>
      </view>
      <view class="income">
        <text>股票</text>
        <text class="bold">{{ moneyStat.stock }}</text>
      </view>
      <view class="income">
        <text>保险</text>
        <text class="bold">{{ moneyStat.insurance }}</text>
      </view>
      <view class="pay">
        <text>理财</text>
        <text class="bold">{{ moneyStat.cash }}</text>
      </view>
    </view>

    <!-- 滚动区域 -->
    <scroll-view class="scroll-view" scroll-y style="height:{{ scrollHeight }}px">
      <view class="list-wrap">
        <repeat for="{{ detailList }}" key="index" index="index" item="item">
          <listsection :item="item"></listsection>
        </repeat>
      </view>
    </scroll-view>

    <!-- 投顾 -->
    <view class="btn-addbill" @tap="bindToAddpage">
      <text>投顾</text>
    </view>
  </view>

</template>

<script>
  import wepy from 'wepy'

  import api from '@/common/api';
  import global from '@/common/global';

  import ListSection from '@/components/bill/listsection'
  import { log, getSystem, formatTime } from '@/utils/util'
  // import m_bill07 from '@/mocks/bills/bill_7'
  // import m_bill08 from '@/mocks/bills/bill_8'
  // import m_bill09 from '@/mocks/bills/bill_9'
  // import m_bill10 from '@/mocks/bills/bill_10'
  // import m_bill11 from '@/mocks/bills/bill_11'

  import m_fortune from '@/mocks/fortune'

  export default class Fortune extends wepy.page {
    config = {
      navigationBarTitleText: '财富列表'
    }

    // data = m_bill09

    data = m_fortune

    components = {
      listsection: ListSection
    }

    methods = {




      // 选择日期
      bindDateChange(e) {
        // let dateStr = e.detail.value
        // this.calenderArr = dateStr.split('-')
        //
        // // 发送接口请求当前月份的数据
        // let month = this.calenderArr[1]

        // console.log('#bindDateChange1:' + JSON.stringify(e))
        // console.log('#bindDateChange2: ' + month)

        // if (month==='07') {
        //   this.moneyStat = m_bill07.moneyStat
        //   this.detailList = m_bill07.detailList
        // }
        // else if (month==='08') {
        //   this.moneyStat = m_bill08.moneyStat
        //   this.detailList = m_bill08.detailList
        // }
        // else if (month==='09') {
        //   this.moneyStat = m_bill09.moneyStat
        //   this.detailList = m_bill09.detailList
        // }
        // else if (month==='10') {
        //   this.moneyStat = m_bill10.moneyStat
        //   this.detailList = m_bill10.detailList
        // }
        // else if (month==='11') {
        //   this.moneyStat = m_bill11.moneyStat
        //   this.detailList = m_bill11.detailList
        // }
        // else {
        //   this.moneyStat = m_bill09.moneyStat
        //   this.detailList = m_bill09.detailList
        // }
        // this.loadMessage();
      },
    }

    // async loadMessage () {
    //   let message;
    //   try {
    //     message = await api.getFortune();
    //     console.log('#getHistory message', message);
    //
    //
    //   } catch (e) {
    //     message = null;
    //     console.error('getHistory fail');
    //     console.log(e);
    //   }
    //   if (message) {
    //     // this.message = message;
    //     // this.to = id;
    //     // this.message.forEach((msg) => {
    //     //   if (msg.from === 'me') {
    //     //     msg.name = userinfo.nickName;
    //     //     msg.icon = userinfo.avatarUrl;
    //     //   }
    //     // });
    //     console.log('#message.detailList: ', message.moneyStat, message.detailList);
    //
    //     this.moneyStat = message.moneyStat
    //     this.detailList = message.detailList
    //
    //     this.$apply();
    //   }
    // }

    onShow() {
      // this.currentTab = 0;
      // this.loadMessage();
    }

    // async loadMessage (id) {
    //   let message;
    //   try {
    //     message = await api.getFortune();
    //     console.error('#getHistory message', message);
    //
    //     this.detailList = message.detailList;
    //   } catch (e) {
    //     message = null;
    //     console.error('getHistory fail');
    //     console.log(e);
    //   }
    //   if (message) {
    //     this.message = message;
    //     this.to = id;
    //     this.message.forEach((msg) => {
    //       if (msg.from === 'me') {
    //         msg.name = userinfo.nickName;
    //         msg.icon = userinfo.avatarUrl;
    //       }
    //     });
    //     this.$apply();
    //   }
    // }

    // 跳转到记账页面
    bindToAddpage() {
      log('#addone')
      let id = 'mahuateng';
      this.$root.$navigate({url: '../chat?id=' + id});

    }

    onLoad(params) {
      log('财富页面加载成功')


      const sys = getSystem()
      wx.createSelectorQuery().select('#topInfo').boundingClientRect((rect) => {
        let h = rect.height
        h = h > 0 ? h : 70
        this.scrollHeight = sys.wh - h
        this.$apply()
      }).exec()

      // 设置当前月份
      const _cdate = formatTime(new Date()).slice(0, 2)


      log('##params:', params.date, params.moneyStat, params.detailList)

      // let aDate = params.date;
      var tDate;
      if (params.date && params.date !== 'undefined') {
        tDate = params.date.split('-').slice(0, 2);
      }


      let detailList = global.getFortune();

      if (detailList && detailList !== 'undefined') {
        console.log('###1-0:', detailList);
        this.detailList = [detailList];
      }
      else {
        console.error('###1-2:', this.moneyStat, fortune.moneyStat);
      }

      let moneyStat = global.getMoneyStat();

      if (moneyStat && moneyStat !== 'undefined') {
        console.log('###1-0:', moneyStat);
        this.moneyStat = moneyStat;
      }
      else {
        console.error('###1-2:', this.moneyStat, fortune.moneyStat);
      }



      // if (fortune.detailList && fortune.detailList !== 'undefined') {
      //   // this.detailList = params.detailList
      //   console.log('###2-0:', this.detailList);
      //   console.log('###2-1:', Object.values(fortune));
      //   console.log('###2-2:', fortune);
      //
      //   var myData = Object.keys(fortune.detailList).map(key => {
      //     return fortune.detailList[key];
      //   })
      //   console.log('###2-3:', myData);
      //
      //   // this.$parent.
      //
      //
      //
      //   // var arr = Array.from(params.detailList.keys(obj), k=>obj[k]);
      //   // console.log('###2-2:',  arr);
      // }
      // else {
      //   console.error('###2-2:', this.detailList, params.detailList);
      // }

      console.log('##date:', new Date(), _cdate, params.date, tDate);
      this.calenderArr = tDate ? tDate : _cdate
      this.$apply()
    }
  }
</script>

<style lang="less">
  .wrap{
    position: relative;
    height: 100%;
  }
  .topinfo{
    display: flex;
    justify-content: space-around;
    height: 140rpx;
    padding: 18rpx 0;
    background-color: #138cff;
    box-sizing: border-box;
    z-index: 10;
    text{
      text-align: center;
      display: block;
      color: #fff;
    }
    > view > text:first-child{
      margin-bottom: 10rpx;
      font-size: 28rpx;
    }
    .bold{
      font-size: 40rpx;
      font-weight: bold;
    }
  }
  .picker{
    display: flex;
    justify-content: space-between;
    align-items: center;
    .icon-pulldown::after{
      font-family: "iconfont" !important;
      font-size: 32rpx;
      color: #fff;
      content: '\e629';
    }
  }

  .scroll-view{
    width: 100%;
    box-sizing: border-box;
  }
  .list-wrap{
    padding-bottom: 130rpx;
  }

  .btn-addbill{
    position: fixed;
    right: 30rpx;
    bottom: 15rpx;
    height: 100rpx;
    width: 100rpx;
    line-height: 100rpx;
    text-align: center;
    background-color: rgba(19, 140, 255, .9);
    border-radius: 100%;
    box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.15);
    text{
      font-size: 26rpx;
      color: #fff;
    }
  }
</style>
