<template>
  <view class="wrap">
    <view class="typewrap">
      <view class="typebar">
        <view class="{{ bill.typeId === '1' ? 'active' : '' }}" @tap="toggleType(1)">
          <text>基金</text>
        </view>
        <view class="{{ bill.typeId === '2' ? 'active' : '' }}" @tap="toggleType(2)">
          <text>股票</text>
        </view>
        <view class="{{ bill.typeId === '3' ? 'active' : '' }}" @tap="toggleType(3)">
          <text>保险</text>
        </view>
        <view class="{{ bill.typeId === '4' ? 'active' : '' }}" @tap="toggleType(4)">
          <text>理财</text>
        </view>
      </view>
    </view>

    <!-- 输入框区域 -->
    <view class="input-area">
      <view class="money">
        <input type="digit" placeholder="￥" confirm-type="done" @input="bindInputMoney" @blur="bindBlurMoney"/>
      </view>
      <view class="remark">
        <input type="text" placeholder="备注信息:" />
      </view>
      <view class="btns-wrap">
        <view class="btn-confirm" @tap="confirmAdd">
          <text>确定</text>
        </view>
        <view class="btn-cancel" @tap="bindToBillpage">
          <text>财富诊断</text>
        </view>
      </view>
    </view>

    <!-- 类别图标列表 -->
    <view class="catewrap">
      <cateslide
        :list.sync="cateList"
        @selectCate.user="chooseCate"></cateslide>
    </view>


    <!-- 投顾 -->
    <view class="btn-addbill" @tap="bindToAddpage">
      <text>投顾</text>
    </view>

  </view>

</template>

<script>
  import wepy from 'wepy'
  import CateSlide from '@/components/bill/cateslide'
  import { log } from '@/utils/util'
  import { fundCateList, stockCateList, insuranceCateList, cashCateList } from '@/utils/config'

  import m_fortune from '@/mocks/fortune'
  import global from '@/common/global';

  export default class AddOne extends wepy.page {
    config = {
      navigationBarTitleText: '我的财富'
    }

    data = {
      cateList: fundCateList,
      bill: {
        typeId: '1'
      },
      form: {
        money: 0,
        cateType: '',
        cateId: '',
        cateName: '',
        remark: '',
      },
      fortune: m_fortune
    }

    components = {
      cateslide: CateSlide
    }

    methods = {
      // 切换记账方式
      toggleType(t) {
        // console.log('#toggleType1:' + JSON.stringify(t))

        if (t === '1' ) {//&& this.bill.typeId !== '1'
          this.bill.typeId = t
          this.cateList = fundCateList
        } else if (t === '2' ) {//&& this.bill.typeId !== '2'
          // console.log('#toggleType2:' + JSON.stringify(t))
          this.bill.typeId = t
          this.cateList = stockCateList
        } else if (t === '3' && this.bill.typeId !== '3') {
          // console.log('#toggleType2:' + JSON.stringify(t))
          this.bill.typeId = t
          this.cateList = insuranceCateList
        } else if (t === '4' && this.bill.typeId !== '4') {
          // console.log('#toggleType2:' + JSON.stringify(t))
          this.bill.typeId = t
          this.cateList = cashCateList
        } else {
          console.log('#toggleType2:' + JSON.stringify(t))
        }

        this.form.cateType = ''
        this.form.cateId = ''
        this.form.cateName = ''
      },

      // 选择收入或支出类别
      chooseCate(type, id, name) {
        log('#chooseCate:', type, id, name)

        this.form.cateType = type
        this.form.cateId = id
        // this.form.cateName = name
      },

      // 输入金额变化得到值
      bindInputMoney(e) {
        let val = e.detail.value
        if (val.indexOf('￥') === 0) {
          return '￥' + val.slice(1)
        } else if (val === '') {
          return ''
        }
        return '￥' + val
      },

      bindBlurMoney(e) {
        let val = e.detail.value
        if (val.indexOf('￥') === 0) {
          val = parseFloat(val.slice(1))
        } else {
          val = 0
        }
        this.form.money = val
      },

      bindBlurRemark(e) {
        let val = e.detail.value.trim()
        if (val !== '') {
          val = val.replace(/<\/?[^>]*>/g, '')
        }
        this.form.remark = val
      },

      // 确认记账
      confirmAdd() {
        let { money, cateType, cateId, cateName, remark } = this.form

        // console.log('#confirmAdd:' + JSON.stringify(this))
        // log('cateType', this.form.cateType);
        // log('cateId', this.form.cateId);

        // log('cateType', cateType);
        // log('cateId', cateId);
        log('##form', money, cateType, cateId);


        if (money <= 0) {
          // 提示金额不能为0
          wx.showToast({
            title: '请输入金额',
            icon: 'success',
            duration: 2000
          })
          return false
        }
        else if(cateId === '' || cateId === '') {
          // 提示金额不能为0
          wx.showToast({
            title: '请选择类型',
            icon: 'success',
            duration: 2000
          })
          return false
        }

        // console.log('#1: ', this.fortune.detailList[0].list);

        if (cateId == 1) {
          cateName  = '封闭式基金'
        }
        else if (cateId == 2)  {
          cateName  = '对冲基金'
        }
        else if (cateId == 3)  {
          cateName  = 'QDII基金'
        }
        else if (cateId == 4)  {
          cateName  = 'ETF基金'
        }
        else if (cateId == 5)  {
          cateName  = '认股权证基金'
        }
        else if (cateId == 6)  {
          cateName  = '契约型基金'
        }
        else if (cateId == 7)  {
          cateName  = '平衡型基金'
        }
        else if (cateId == 8)  {
          cateName  = '公司型基金'
        }
        else if (cateId == 9)  {
          cateName  = '保险基金'
        }
        else if (cateId == 10)  {
          cateName  = '信托基金'
        }
        else if (cateId == 11)  {
          cateName  = '投资基金'
        }
        else if (cateId == 12)  {
          cateName  = '股票基金'
        }
        else if (cateId == 13)  {
          cateName  = '货币基金'
        }
        else if (cateId == 14)  {
          cateName  = '债券基金'
        }
        else if (cateId == 15)  {
          cateName  = '分级基金B份额'
        }
        else if (cateId == 16)  {
          cateName  = '热点概念股'
        }
        else if (cateId == 17)  {
          cateName  = '成长股'
        }
        else if (cateId == 18)  {
          cateName  = '成熟股'
        }
        else if (cateId == 19)  {
          cateName  = '银行保险石油股'
        }
        else if (cateId == 20)  {
          cateName  = '券商股'
        }
        else if (cateId == 21)  {
          cateName  = '人寿险'
        }
        else if (cateId == 22)  {
          cateName  = '意外险'
        }
        else if (cateId == 23)  {
          cateName  = '养老险'
        }
        else if (cateId == 24)  {
          cateName  = '重疾险'
        }
        else if (cateId == 25)  {
          cateName  = '健康险'
        }
        else if (cateId == 26)  {
          cateName  = 'P2P'
        }
        else if (cateId == 27)  {
          cateName  = '固收理财'
        }
        else if (cateId == 28)  {
          cateName  = '浮动理财'
        }
        else if (cateId == 29)  {
          cateName  = '银行存款'
        }
        else if (cateId == 30)  {
          cateName  = '现金'
        }
        else {
          cateName  = '其他'
        }




        // 发送Post请求记录
        this.fortune.detailList[0].list.push({
          id: cateId,
          image: '/images/reading.png',
          title: cateName,
          remark: remark,
          mount: money,
        });

        // console.log('#2: ', this.fortune.detailList[0].list);
// var z = x.concat(y);
        // let moneyStat = [].concat(this.fortune.moneyStat)
        // let detailList = [].concat(this.fortune.detailList)


        let moneyStat = this.fortune.moneyStat
        let detailList = this.fortune.detailList[0]
        global.setFortune(detailList);

        console.log('##0-0: ', this.fortune.moneyStat, moneyStat);
        console.log('##0-1: ', this.fortune.detailList[0], detailList);



        // this.$navigate('./fortune', {moneyStat: this.fortune.moneyStat, detailList: this.fortune.detailList})
        this.$navigate('./fortune', {detailList: this.fortune.detailList[0].list})
      },

      // 取消 返回账本页
      bindToBillpage() {
        this.$switch('../bill')
      }
    }

    onLoad() {
      // log('账单页面加载成功')
      // 设置当前月份
      // const _cdate = formatTime(new Date()).slice(0, 2)
      // this.calenderArr = _cdate
      // this.$apply()
    }

    // 跳转到记账页面
    bindToAddpage() {
      log('#addone')
      let id = 'mahuateng';
      this.$root.$navigate({url: '../chat?id=' + id});

    }
  }
</script>

<style lang="less">
  .wrap{
    position: relative;
    height: 100%;
    background-color: #fff;
  }
  .typewrap{
    padding: 30rpx 0;
  }
  .typebar{
    display: flex;
    width: 50%;
    margin: 0 auto;
    height: 60rpx;
    view{
      width: 50%;
      line-height: 60rpx;
      text-align: center;
      font-size: 28rpx;
      background-color: #fff;
      transition: background-color .3s;
      box-sizing: border-box;
      border: 2rpx solid #138cff;
      text{
        color: #138cff;
      }
    }
    view:first-child{
      border-top-left-radius: 6rpx;
      border-bottom-left-radius: 6rpx;
    }
    view:last-child{
      border-top-right-radius: 6rpx;
      border-bottom-right-radius: 6rpx;
    }
    .active{
      background-color: #138cff;
      text{
        color: #fff;
      }
    }
  }
  .input-area{
    padding: 0 50rpx;
    margin-bottom: 30rpx;
    border-bottom: 6rpx solid #138cff;
  }
  .money{
    padding-bottom: 6rpx;
    border-bottom: 1rpx solid #f3f3f3;
    input{
      height: 120rpx;
      line-height: 120rpx;
      font-size: 70rpx;
    }
  }
  .remark{
    padding-bottom: 6rpx;
    border-bottom: 1rpx solid #f3f3f3;
    input{
      height: 70rpx;
      line-height: 70rpx;
      font-size: 30rpx;
    }
  }

  .btns-wrap{
    display: flex;
  }

  .btn-confirm, .btn-cancel{
    margin: 30rpx 0;
    width: 150rpx;
    height: 60rpx;
    line-height: 60rpx;
    text-align: center;
    border-radius: 4rpx;
    text{
      font-size: 26rpx;
    }
  }
  .btn-confirm{
    margin-right: 30rpx;
    background-color: #138cff;//#f8f8f8;
    color: #fff;
  }
  .btn-cancel{
    background-color: #138cff;
    color: #fff;
  }

  .btn-addbill{
    position: fixed;
    right: 30rpx;
    bottom: 15rpx;
    height: 100rpx;
    width: 100rpx;
    line-height: 100rpx;
    text-align: center;
    background-color: rgba(19, 140, 255, .9);
    border-radius: 100%;
    box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.15);
    text{
      font-size: 26rpx;
      color: #fff;
    }
  }

</style>
