<template>
  <calendar
  :currentDate.sync="currentDate"
  :startDate.sync="startDate"
  :endDate.sync="endDate"
  :hasIconList.sync="hasIconList"
  :moduleId.sync="'step1Canlendar'"
  ></calendar>
</template>

<script>
import wepy from 'wepy'
import Panel from '@/components/panel' // alias example
import Counter from 'counter' // alias example
import List from '../components/list' // aliasFields example
import moduleA from 'module-a' // aliasFields ignore module example
import Group from '../components/group'
import Toast from 'wepy-com-toast'
// import testMixin from '../mixins/test'

import ListItem from '@/components/index/listitem'
import Calendar from '@/components/index/calendar'

import m_bill07 from '../mocks/bills/bill_7'
import m_bill08 from '../mocks/bills/bill_8'
import m_bill09 from '../mocks/bills/bill_9'
import m_bill10 from '../mocks/bills/bill_10'
import m_bill11 from '../mocks/bills/bill_11'

console.log('moduleA ignored: ', moduleA) // => moduleA ignored: {}

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '收款日历'
  }
  components = {
    // panel: Panel,
    // counter1: Counter,
    // counter2: Counter,
    // list: List,
    // group: Group,
    // toast: Toast,
    // listitem: ListItem,
    calendar: Calendar
  }

  onLoad(){
    let months = new Array(m_bill09, m_bill10, m_bill11, m_bill07, m_bill08)
    console.log('#calChangeCurrentMonth1:' + ',,' + JSON.stringify(months.length))
    for (var i = 0; i < months.length; i++) {
      let month = months[i];

      var aIconList = new Array()
      for (var j = 0; j < month.detailList.length; j++) {
        // console.log('#calChangeCurrentMonth:' + JSON.stringify(m_bill.detailList[i].info.date))

        let date = month.detailList[j].info.date
        aIconList[j] = date;
      }

      this.hasIconList =  this.hasIconList.concat(aIconList)

      console.log('#calChangeCurrentMonth:' + ',,' + JSON.stringify(month))// + JSON.stringify(this.hasIconList) + ',,'  + JSON.stringify(aIconList) + ',,'  +
    }

    this.$broadcast("startRenderCalendar");//通知日历组件可以开始渲染
  }

  data = {
    currentDate: "2018-09-08",
    startDate: '2018-07-01',
    endDate: '2018-11-01',
    hasIconList:['2018-08-01', '2018-08-03', '2018-08-07', '2018-08-13', '2018-08-17', '2018-08-19', '2018-08-23', '2018-08-27', '2018-08-29', '2018-09-01', '2018-09-03', '2018-09-07', '2018-09-13', '2018-09-17', '2018-09-19', '2018-09-23', '2018-09-27', '2018-09-29']
  };  // 页面所需数据均需在这里声明，可用于模板数据绑定

  events = {
    calChangeCurrentMonth:function (date,moduleId,e) {
      //日历当前月份改变回调
      //单个用例只需用到date
      //多个用例是通过传回来的moduleId去判断是那个用例，从而操作不懂逻辑：
      //if(moduleId=='xxxx'){
      //
      // }else{
      // }
    },


    calChangeSelectedDay:function (date,moduleId,e) {
      //日历当前月份改变回调
      //单个用例只需用到date
      //多个用例是通过传回来的moduleId去判断是那个用例，从而操作不懂逻辑：
      //if(moduleId=='xxxx'){
      //
      // }else{
      // }
      // this.$broadcast("startRenderCalendar");//通知日历组件可以开始渲染

      this.$navigate('./bill/bill')
    }
  };  // 声明组件之间的事件处理函数
}
</script>

<style lang="less">
.wrap{
  background-color: #f8f8f8;
}
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
}

.userinfo-nickname {
  color: #aaa;
}
</style>
