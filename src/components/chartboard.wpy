<style type="scss">
    $fontcolor: #7b7b7b;
    $activecolor: #13b113;
    .chartboard {
        background-color: #ededed;
        padding-bottom: 120rpx;
        &.fixed {
            position:fixed;
            left:0;
            right:0;
            overflow-y:scroll;
        }
        .msgarea {
            padding: 20rpx 10rpx;
            .clearfix:after{content:".";display:block;height:0;clear:both;visibility:hidden}
            .clearfix{height:1%;}
            .msg {
                border: 1px solid #d8d8d8;
                font-size: 32rpx;
                display: inline-block;
                padding: 14rpx 20rpx;
                max-width: 450rpx;
                border-radius: 15rpx;
            }
            .icon {
                width: 70rpx;
                height: 70rpx;
            }
            &.fromme {
                .msg {
                    background-color: #9fe757;
                    float: right;
                    margin-right: 10rpx;
                }
                .icon {
                    float: right;
                    margin-right: 10rpx;
                }
            }
            &.other {
                .msg {
                    background-color: #fff;
                    float: left;
                    margin-left: 10rpx;
                }
                .icon {
                    float: left;
                    margin-left: 10rpx;
                }
            }
        }
    }
</style>
<template>
    <scroll-view scroll-y="1" class="chartboard{{focus ? ' fixed' : ''}}">
        <block wx:for="{{message}}" wx:key="index" wx:for-index="index" wx:for-item="item">
            <view class="msgarea{{item.from === 'me' ? ' fromme' : ' other'}}">
                <image class="icon" src="{{item.icon}}"></image>
                <view class="msg">{{item.msg}}</view>
                <view class="clearfix"></view>
            </view>
        </block>
    </scroll-view>
</template>
<script>
    import wepy from 'wepy';

    import api from '../common/api';
    import global from '../common/global';

    export default class Chartboard extends wepy.component {

        data = {
            message: [],
            focus: false,
        };

        methods = {
        };

        onLoad () {
        }

        fixPosition (focus) {
            this.focus = focus;
            this.$apply();
        }

        async loadMessage (id) {
            let userinfo, message;
            try {
                userinfo = await api.getUserInfo();
            } catch (e) {
                console.log(e);
                userinfo = {
                    nickName: 'Gcaufy',
                    id: 'gcaufy',
                    avatarUrl: wepy.env === 'web' ? './images/myheader.png' : '../images/myheader.png',
                };
            }
            this.current = userinfo;
            try {
                message = await api.getHistory(id);
            } catch (e) {
                message = null;
                console.error('getHistory fail');
                console.log(e);
            }
            if (message) {
                this.message = message;
                this.to = id;
                this.message.forEach((msg) => {
                    if (msg.from === 'me') {
                        msg.name = userinfo.nickName;
                        msg.icon = userinfo.avatarUrl;
                    }
                });
                this.$apply();
            }
        }

        async sendMessage (msg) {
            let id = this.to;
            let msgObj = await api.sendMsg(id, msg);

            msgObj.name = this.current.nickName;
            msgObj.icon = this.current.avatarUrl;
            this.message.push(msgObj);

            this.$apply();
            this.$invoke('../myinput', 'clear');

            let randomReply = await api.getRandomReply(id);
            this.replyMessage(randomReply);

            console.log('#sendMessage:' + JSON.stringify(msg))
        }

        async replyMessage (msg) {
            let id = this.to;
            let contact = global.getContact(id);
            let msgObj = await api.replyMsg(id, msg);
            msgObj.name = contact.name;
            msgObj.icon = contact.icon;

            this.message.push(msgObj);
            this.$apply();
        }
    }
</script>
